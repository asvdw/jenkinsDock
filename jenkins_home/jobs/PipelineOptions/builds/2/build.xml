<?xml version='1.1' encoding='UTF-8'?>
<flow-build plugin="workflow-job@2.24">
  <actions>
    <hudson.model.CauseAction>
      <causeBag class="linked-hash-map">
        <entry>
          <hudson.triggers.TimerTrigger_-TimerTriggerCause/>
          <int>1</int>
        </entry>
      </causeBag>
    </hudson.model.CauseAction>
    <hudson.model.ParametersAction>
      <safeParameters class="sorted-set"/>
      <parameters>
        <hudson.model.BooleanParameterValue>
          <name>DEBUG_BUILD</name>
          <description>Is it the debug build?</description>
          <value>true</value>
        </hudson.model.BooleanParameterValue>
      </parameters>
      <parameterDefinitionNames>
        <string>DEBUG_BUILD</string>
      </parameterDefinitionNames>
    </hudson.model.ParametersAction>
    <org.jenkinsci.plugins.workflow.libs.LibrariesAction plugin="workflow-cps-global-lib@2.9">
      <libraries/>
    </org.jenkinsci.plugins.workflow.libs.LibrariesAction>
    <org.jenkinsci.plugins.pipeline.modeldefinition.actions.ExecutionModelAction plugin="pipeline-model-definition@1.3.1">
      <stagesUUID>10e48bf3-7283-4b49-b32f-2fda2bdf101e</stagesUUID>
      <stagesList>
        <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTStages plugin="pipeline-model-api@1.3.1">
          <stages>
            <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTStage>
              <name>Example</name>
              <when>
                <conditions>
                  <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTWhenExpression>
                    <name>expression</name>
                    <args class="org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTNamedArgumentList">
                      <arguments class="linked-hash-map">
                        <entry>
                          <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKey>
                            <key>scriptBlock</key>
                          </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKey>
                          <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue_-ConstantValue>
                            <value class="string">return params.DEBUG_BUILD</value>
                          </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue_-ConstantValue>
                        </entry>
                      </arguments>
                    </args>
                  </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTWhenExpression>
                </conditions>
              </when>
              <environment>
                <variables class="linked-hash-map">
                  <entry>
                    <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKey>
                      <key>NAME</key>
                    </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKey>
                    <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue_-ConstantValue>
                      <value class="string">Rafal</value>
                    </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue_-ConstantValue>
                  </entry>
                </variables>
              </environment>
              <branches>
                <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTBranch>
                  <name>default</name>
                  <steps>
                    <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTStep>
                      <name>echo</name>
                      <args class="org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTNamedArgumentList">
                        <arguments class="linked-hash-map">
                          <entry>
                            <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKey>
                              <key>message</key>
                            </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKey>
                            <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue_-GStringValue>
                              <value class="string">&quot;Hello from $NAME&quot;</value>
                            </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue_-GStringValue>
                          </entry>
                        </arguments>
                      </args>
                    </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTStep>
                    <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTScriptBlock>
                      <name>script</name>
                      <args class="org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTNamedArgumentList">
                        <arguments class="linked-hash-map">
                          <entry>
                            <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKey>
                              <key>scriptBlock</key>
                            </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKey>
                            <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue_-ConstantValue>
                              <value class="string">def browsers = [&apos;chrome&apos;, &apos;firefox&apos;]
                         for (int i = 0; i &lt; browsers.size(); ++i) {
                              echo &quot;Testing the ${browsers[i]} browser.&quot;
                         }</value>
                            </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue_-ConstantValue>
                          </entry>
                        </arguments>
                      </args>
                    </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTScriptBlock>
                  </steps>
                </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTBranch>
              </branches>
              <parallelContent/>
            </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTStage>
          </stages>
          <uuid>10e48bf3-7283-4b49-b32f-2fda2bdf101e</uuid>
        </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTStages>
      </stagesList>
    </org.jenkinsci.plugins.pipeline.modeldefinition.actions.ExecutionModelAction>
    <org.jenkinsci.plugins.workflow.cps.EnvActionImpl plugin="workflow-cps@2.54">
      <env class="tree-map"/>
    </org.jenkinsci.plugins.workflow.cps.EnvActionImpl>
  </actions>
  <queueId>3</queueId>
  <timestamp>1533985740172</timestamp>
  <startTime>1533985740175</startTime>
  <result>SUCCESS</result>
  <duration>11787</duration>
  <charset>UTF-8</charset>
  <keepLog>false</keepLog>
  <execution class="org.jenkinsci.plugins.workflow.cps.CpsFlowExecution">
    <result>SUCCESS</result>
    <script>pipeline {
     agent any
     triggers { cron(&apos;9,11,13 * * * *&apos;) }
     options { timeout(time: 5) }
     parameters {
          booleanParam(name: &apos;DEBUG_BUILD&apos;, defaultValue: true,
          description: &apos;Is it the debug build?&apos;)
     }
     stages {
          stage(&apos;Example&apos;) {
               environment { NAME = &apos;Rafal&apos; }
               when { expression { return params.DEBUG_BUILD } }
               steps {
                    echo &quot;Hello from $NAME&quot;
                    script {
                         def browsers = [&apos;chrome&apos;, &apos;firefox&apos;]
                         for (int i = 0; i &lt; browsers.size(); ++i) {
                              echo &quot;Testing the ${browsers[i]} browser.&quot;
                         }
                    }
               }
          }
     }
     post { always { echo &apos;I will always say Hello again!&apos; } }
}
</script>
    <loadedScripts class="map"/>
    <durabilityHint>MAX_SURVIVABILITY</durabilityHint>
    <timings class="map">
      <entry>
        <string>flowNode</string>
        <long>328501106</long>
      </entry>
      <entry>
        <string>classLoad</string>
        <long>491498170</long>
      </entry>
      <entry>
        <string>run</string>
        <long>1764931363</long>
      </entry>
      <entry>
        <string>parse</string>
        <long>169775306</long>
      </entry>
      <entry>
        <string>saveProgram</string>
        <long>350176661</long>
      </entry>
    </timings>
    <sandbox>true</sandbox>
    <iota>31</iota>
    <head>1:31</head>
    <done>true</done>
    <resumeBlocked>false</resumeBlocked>
  </execution>
  <completed>true</completed>
  <checkouts class="hudson.util.PersistedList"/>
</flow-build>