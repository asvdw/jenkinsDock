<?xml version='1.1' encoding='UTF-8'?>
<flow-definition plugin="workflow-job@2.24">
  <actions>
    <org.jenkinsci.plugins.pipeline.modeldefinition.actions.DeclarativeJobAction plugin="pipeline-model-definition@1.3.1"/>
    <org.jenkinsci.plugins.pipeline.modeldefinition.actions.DeclarativeJobPropertyTrackerAction plugin="pipeline-model-definition@1.3.1">
      <jobProperties/>
      <triggers>
        <string>hudson.triggers.TimerTrigger</string>
      </triggers>
      <parameters>
        <string>DEBUG_BUILD</string>
      </parameters>
    </org.jenkinsci.plugins.pipeline.modeldefinition.actions.DeclarativeJobPropertyTrackerAction>
  </actions>
  <description>Test d&apos;options pipeline</description>
  <keepDependencies>false</keepDependencies>
  <properties>
    <hudson.model.ParametersDefinitionProperty>
      <parameterDefinitions>
        <hudson.model.BooleanParameterDefinition>
          <name>DEBUG_BUILD</name>
          <description>Is it the debug build?</description>
          <defaultValue>true</defaultValue>
        </hudson.model.BooleanParameterDefinition>
      </parameterDefinitions>
    </hudson.model.ParametersDefinitionProperty>
    <org.jenkinsci.plugins.workflow.job.properties.PipelineTriggersJobProperty>
      <triggers>
        <hudson.triggers.TimerTrigger>
          <spec>9,11,13 * * * *</spec>
        </hudson.triggers.TimerTrigger>
      </triggers>
    </org.jenkinsci.plugins.workflow.job.properties.PipelineTriggersJobProperty>
  </properties>
  <definition class="org.jenkinsci.plugins.workflow.cps.CpsFlowDefinition" plugin="workflow-cps@2.54">
    <script>pipeline {
     agent any
     triggers { cron(&apos;9,11,13 * * * *&apos;) }
     options { timeout(time: 5) }
     parameters {
          booleanParam(name: &apos;DEBUG_BUILD&apos;, defaultValue: true,
          description: &apos;Is it the debug build?&apos;)
     }
     stages {
          stage(&apos;Example&apos;) {
               environment { NAME = &apos;Rafal&apos; }
               when { expression { return params.DEBUG_BUILD } }
               steps {
                    echo &quot;Hello from $NAME&quot;
                    script {
                         def browsers = [&apos;chrome&apos;, &apos;firefox&apos;]
                         for (int i = 0; i &lt; browsers.size(); ++i) {
                              echo &quot;Testing the ${browsers[i]} browser.&quot;
                         }
                    }
               }
          }
     }
     post { always { echo &apos;I will always say Hello again!&apos; } }
}
</script>
    <sandbox>true</sandbox>
  </definition>
  <triggers/>
  <disabled>true</disabled>
</flow-definition>